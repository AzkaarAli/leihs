Story: Availability depending on Pools

	As an Inventory Manager 
	I want to be sure that a user only gets to see models from inventory pools he has access to
	In order to prevent a user from ordering things he cannot borrow
	
	
Scenario: Basic
	
	Given 2 inventory pools
	And a model 'Coffee Mug' exists
	And this model has 2 items in inventory pool 1
	And this model has 3 items in inventory pool 2
	And user 'joe' has access to inventory pool 1
	And user 'jack' has access to inventory pool 1 and 2
	And user 'john' has access to inventory pool 2
	
	Then the maximum number of available 'Coffee Mug' for 'joe' is 2
	And the maximum number of available 'Coffee Mug' for 'jack' is 5
	And the maximum number of available 'Coffee Mug' for 'john' is 3
	
Scenario: Items available in different pools
	
	Given 2 inventory pools
	And a model 'Coffee Mug' exists
	And this model has 2 items in inventory pool 1
	And this model has 3 items in inventory pool 2
	And a model 'Coffee Machine' exists
	And this model has 1 item in inventory pool 1
	And user 'jack' has access to inventory pool 1 and 2
	
	When 'jack' orders 2 'Coffee Mug'
	And 'jack' order 1 'Coffee Machine'
	And the new order is submitted
	
	Then 1 order exists for inventory pool 1
	And it asks for 3 items
	And 0 orders exist for inventory pool 2
	
Scenario: Splitting order and notifying user
	
	Given 2 inventory pools
	And a model 'Coffee Mug' exists
	And this model has 3 items in inventory pool 2
	And a model 'Coffee Machine' exists
	And this model has 1 items in inventory pool 1
	And user 'jack' has access to inventory pool 1 and 2
	
	When 'jack' orders 3 'Coffee Mug'
	And 'jack' orders 1 'Coffee Machine'
	And the new order is submitted
	
	Then 1 order exists for inventory pool 1
	And it asks for 1 item
	And 1 order exists for inventory pool 2
	And it asks for 3 items
	And user 'jack' gets notified that his order has been submitted
	
Scenario: User can't order things that user can't see
	
	Given 2 inventory pools
	And a model 'Coffee Mug' exists
	And this model has 3 items in inventory pool 2
	And a model 'Coffee Machine' exists
	And this model has 1 items in inventory pool 1
	And user 'jack' has access to inventory pool 1
	
	When 'jack' searches for 'Coffee Mug'
	Then he gets an empty result set
	
	When 'jack' searches for 'Coffee'
	Then he sees 'Coffee Machine'
	
Scenario: User orders the same item multiple times, thus exceeding maximum quantity

  Given 1 inventory pools
  And a model 'Pink Hairbrush' exists
  And this model has 3 items in inventory pool 1
  And user 'samantha' has access to inventory pool 1
  
  When 'samantha' orders 3 'Pink Hairbrush'
  Then they should be available
  
  When 'samantha' orders another 2 'Pink Hairbrush' for the same time
  Then they should not be available
  
Scenario: User can decide from which pool he orders

  Given 2 inventory pools
  And a model 'Coffee Mug' exists
  And this model has 3 items in inventory pool 1
  And this model has 1 items in inventory pool 2
  And user 'jack' has access to inventory pool 1
  And user 'jack' has access to inventory pool 2
  
  When 'jack' orders 2 'Coffee Mug' from inventory pool 1
  
  Then they should be available
  
  When 'jack' orders 2 'Coffee Mug' from inventory pool 2
  Then they should not be available
  