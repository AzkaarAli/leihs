%section#topfilter
  
  %form.availability
    %input#date_from.date.start{:name => "startdate", :value => Date.today.strftime("%d.%m.%y")}
    = "-"
    %input#date_to.date.end{:name => "enddate", :value => Date.tomorrow.strftime("%d.%m.%y")}
    .checkarea
      %input#available-only.check{:type => "checkbox", :name => "available-only", :value => "available-only"}
      %label{:for => "available-only"}
        = _("Show Available")
          
  %form.sort{:method => "get"}
    .container
      %select.styled{:name => "sort_and_sort_mode"}
        %option{:value => "name ASC"}= _("Productname (A-Z)")
        %option{:value => "name DESC"}= _("Productname (Z-A)")
        %option{:value => "manufacturer ASC"}= _("Manufacturer (A-Z)")
        %option{:value => "manufacturer DESC"}= _("Manufacturer (Z-A)")
  
  .ipSelection
    = link_to "javascript: void(0)" do
      = _("Parks (#{current_user.inventory_pools.length})")
      %span.icon
    %form.hover
      - current_user.inventory_pools.each do |ip|
        .line
          %input{:type => "checkbox"}
          %label
            = ip.name
          
:javascript
  function update_availability(){
    var sd = $("#date_from").datepicker("getDate").getTime() / 1000;
    var ed = $("#date_to").datepicker("getDate").getTime() / 1000;
    
    $("[data-availability]").each(function(){
      var availability_ips = $(this).data('availability');
      // TODO filter active inventory_pools
      var min_ips = $.map(availability_ips, function(elem){
        var min = 0;
        var to_min = [];
        var f1 = elem.availability.filter(function(x){ return (x[0] < sd); });
        if(f1.length) to_min.push(f1[f1.length-1][1]);
        var f2 = elem.availability.filter(function(x){ return (sd <= x[0] && x[0] <= ed); });
        if(f2.length) to_min.push(Math.min.apply(Math, $.map(f2, function(x){ return x[1]; })));
        if(to_min.length) min = Math.min.apply(Math, to_min);
        return Math.max.apply(Math, [min, 0]);
      });
      var absolute_min = Math.min.apply(Math, min_ips);
      $(this).html(absolute_min);
    });
  }

  $(document).ready(function () {

    $.datepicker.setDefaults($.datepicker.regional['#{current_user.language.locale_name.dasherize}']);
    
    var dates = $('#topfilter .availability .date').datepicker({
      minDate: 0,
      showOtherMonths: true,
      selectOtherMonths: true,
      showButtonPanel: true,
      onClose: function(selectedDate, instance) {
        var option = this.id == "date_from" ? "minDate" : "maxDate",
            date = $.datepicker.parseDate(instance.settings.dateFormat || $.datepicker._defaults.dateFormat, selectedDate, instance.settings );
        dates.not( this ).datepicker( "option", option, date );

        update_availability();
      },
      dateFormat: '#{current_user.language.locale_name.dasherize=="de-CH" ? "dd.mm.y" : "dd/mm/y"}'
    });

    update_availability();
  });
