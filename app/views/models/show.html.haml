= render :partial => '/layouts/frontend/tabs'
= render :partial => '/layouts/frontend/content_box_head'

#model.innercontent

  %h1
    = @model.name
  %p.subtitle
    = @model.manufacturer
  = link_to book_model_path(@model), :class => "button green" do
    = _("Book")
  
  - unless @model.images.empty?
    %section#images
      %table#bigimage
        %tr
          %td
            = image_tag "#{@model.images.first.public_filename}", :alt => @model.name
      #hiddenimages
        - if @model.images.size > 1
          - @model.images.each_with_index do |i, index|
            - unless index.zero?
              %table
                %tr
                  %td
                    = image_tag "#{i.public_filename}", :class => "hidden", :alt => @model.name
              
      - if @model.images.size > 1
        #smallimages
          - @model.images.each_with_index do |i, index|
            - unless index.zero?
              %table
                %tr
                  %td
                    = image_tag("#{i.public_filename(:thumb)}")
              
    .clear
    
  - unless @model.description.blank?
    %p.description
      = @model.description
  
  - unless @model.properties.empty? and @model.attachments.empty?
    %section.properties
      - unless @model.attachments.empty?
        %table.item
          %tr
            %td.key
              = _("Documents")
            %td.value
              - attachments = []
              - @model.attachments.each do |a|
                - attachments.push(link_to a.filename, a.filename, :title => a.filename, :target => "_blank")
              != attachments.join(", ")
      - @model.properties.each do |p|
        %table.item
          %tr
            %td.key
              = p.key
            %td.value
              = p.value
      %table.item.switcher
        %tr
          %td
            %span.icon
            %span.amount
              = @model.properties.size
            %span.text.more
              = _("more properties")
            %span.text.less
              = _("show less properties")
              
  - unless @model.compatibles.empty?
    %hr
    %section#accessories
      %h2
        = _("Recommended Accessories")
      - @model.compatibles.each_slice(4) do |s|
        .row
          - s.each do |c|
            .cell
              = link_to image_tag("#{ c.image_thumb }"), c, :title=>c.name
              %h3
                = link_to truncate(c.name, :length => 32), c, :title=>c.name
          .clear
          
  
              
= render :partial => '/layouts/frontend/content_box_foot'
= render :partial => '/layouts/frontend/aside'

:javascript
  
  $(document).ready(function(){
    Properties.setup();
    Images.setup();
  });
  
  /////// PROPERTIES ////////
  
  var Properties = new Properties();
  
  function Properties() {
      
    this.min = 6;
    this.max = 15;
    this.animationAcceleration = 50;
    this.open = false;
      
    this.setup = function() {
    
      if(($("#model .properties .item").length-1) > Properties.min) {
      
        Properties.hideItems();
        Properties.setupButton();
        
      }
    }
    
    this.hideItems = function() {
    
      $("#model .properties .item").each(function(index, value){
        if(index > (Properties.min - 1)) {
          $(value).hide();
        }
      });
    }
    
    this.setupButton = function() {
    
      $("#model .properties .switcher").bind("click", function() {
        Properties.toggle();
      });
      
      $("#model .properties .switcher").show();
      
      $("#model .properties .switcher .amount").html($("#model .properties .item:hidden").size());
    }
    
    this.toggle = function() {
      
      Properties.open = !Properties.open;
      
      if(Properties.open) {
        Properties.showMore();
      } else {
        Properties.showLess();
      }
    }
    
    this.showMore = function() {
      
      var _delay = 0;
      $("#model .properties .item").each(function(index, value){
          if(index > (Properties.min - 1)) {
              $(value).stop(true, true).delay(_delay).show(1);
              _delay += Properties.animationAcceleration;
          }
      });
      
      $("html,body").animate({ scrollTop: $("#model .properties").offset().top - 12 }, 1500, "swing");
      
      $("#model .properties .switcher .text.more").hide();
      $("#model .properties .switcher .amount").hide();
      $("#model .properties .switcher .text.less").show();
      $("#model .properties .switcher .icon").addClass("rotated");
    }
    
    this.showLess = function() {
      
      var _delay = 0;
      var _items = $("#model .properties .item");
      
      for (var i = _items.length-1; i >= 0; i--) {
        if(i > (Properties.min - 1)) {
          if(!$(_items[i]).hasClass("switcher")) {
            $(_items[i]).stop(true, true).delay(_delay).hide(1);
            _delay += Properties.animationAcceleration/2;
          }
        }
      }
      
      var _offset_top =  $(_items[Properties.min]).offset().top + $(_items[Properties.min]).height()*2 - $(window).height();
      var _duration = Properties.animationAcceleration/2 * (_items.length + Properties.min - 1) ;
      $("html,body").stop(true,true).animate({ scrollTop: _offset_top }, _duration, "swing");
      
      $("#model .properties .switcher .text.more").show();
      $("#model .properties .switcher .amount").show();
      $("#model .properties .switcher .text.less").hide();
      $("#model .properties .switcher .icon").removeClass("rotated");
    }
  }
  
  /////// IMAGES ////////
  
  var Images = new Images();
  
  function Images() {
  
    this.leaveTimer;
    this.enterTimer;
    
    this.setup = function() {
    
      $('#model #smallimages table').bind('mouseenter', function(){
          hoveredItem = $(this);
          clearTimeout(Images.leaveTimer);
          Images.enterTimer = setTimeout(function(){
            $('#model #hiddenimages img').each(function() {
                if($(this).attr('src') == hoveredItem.find("img").attr('src').replace(/_thumb/g, "")) {
                  $(this).stop(true, true).delay(100).fadeTo(600, 1.0);
                  
                  $('#model #bigimage img').stop(true, true).animate({
                      opacity: 0
                  });
                }
            });
          }, 100);
      });
      
      $('#model #smallimages table').bind('mouseleave', function(){
          hoveredItem = $(this);
          clearTimeout(Images.enterTimer);
          $('#model #hiddenimages img').each(function() {
              if($(this).attr('src') == hoveredItem.find("img").attr('src').replace(/_thumb/g, "")) {
                  if($(this).css("opacity") != 1) {
                      $(this).removeAttr("style");
                  }
                  $(this).stop(true, true).delay(100).fadeTo(1000, 0, function(){
                      $(this).removeAttr("style");
                  });
                  Images.leaveTimer = setTimeout(function(){
                    $('#model #bigimage img').stop(true, true).animate({
                      opacity: 1
                    });
                  }, 200);
              }
          });
      });
    }
  }