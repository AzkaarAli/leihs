= render :partial => '/layouts/frontend/tabs'
= render :partial => '/layouts/frontend/content_box_head'

#models.innercontent{:class => @children.blank? ? "fullwidth" : nil} 
    
  - unless @children.blank?
    .aside  
    
      - if @category
        - unless @children.blank?
          %ul#categories
            - @children.each do |c|
              %li
                %h2
                  = link_to c, category_models_path(c), :title => c
                %ul
                  - c.children.each do |child|
                    %li
                      = link_to child, category_models_path(child) , :title => child
                      
        - unless (all_templates = @category.all_templates).blank?
          %hr
          %h2.templates
            %span.icon
            = _("Matching Templates")
          %ul#templates
            - all_templates.each do |t|
              %li
                %h2
                  = link_to t, template_models_path(t), :title => t
                %ul
                  - t.children.each do |child|
                    %li
                      = link_to child, template_models_path(child) , :title => child
      
      - elsif not @children.blank?
        %ul#categories
          - @children.each do |t|
            %li
              %h2
                = link_to t, template_models_path(t), :title => t
              %ul
                - t.children.each do |child|
                  %li
                    = link_to child, template_models_path(child) , :title => child
                  
  = render :partial => 'topfilter'

  %section#modellist
    = render @models

  .clear
  
  .borderleft
  .borderright
      
= render :partial => '/layouts/frontend/content_box_foot'
= render :partial => '/layouts/frontend/aside'

:javascript
  $(document).ready(function(){
    ModelsListItems.setup();
  });
  
  var ModelsListItems = new ModelsListItems();
  
  function ModelsListItems() {
      
      this.hovering = false;
      this.hoveringMode = false;
      this.showDelayTimer;
      this.showDelay = 400;
      this.hoveringModeTimer;
      this.hoveringModeTimeout = 400;
            
      this.setup = function() {
        
        $('#models #modellist .item .overlay .imageanchor').bind('mouseenter', function(){
          var _this = $(this);
          $(this).data("over", true);
          ModelsListItems.hovering = true;
          
          if(ModelsListItems.hoveringMode) {
            // in hovering mode popup hover immediately
            $(this).parent().find(".hover").hide(0, function(){
                if(_this.data("over")) {
                  if($(this).find(".inner").children().length > 2) {
                    $(this).stop().show(0, function() {
                        ModelsListItems.checkPosition($(this));
                    });
                  }
                } else {
                    $(this).stop().hide();                    
                }
            });
          } else {
            // normaly having a timer delaying showing the hover
            ModelsListItems.showDelayTimer = setTimeout(function(){
              _this.parent().find(".hover").hide(0, function(){
                ModelsListItems.hoveringMode = true;
                if(_this.data("over")) {
                  if($(this).find(".inner").children().length > 2) {
                    $(this).stop().show(0, function() {
                        ModelsListItems.checkPosition($(this));
                    });
                  }
                } else {
                    $(this).stop().hide();                    
                }
              });
            }, ModelsListItems.showDelay);
          }
        });
        
        // MOUSELEAVE (imageanchor)
        $('#models #modellist .item .overlay .imageanchor').bind('mouseleave', function(){
            $(this).data("over", false);
            ModelsListItems.hovering = false;
            clearTimeout(ModelsListItems.showDelayTimer);
            $(this).parent().find(".hover").stop().hide(0, function() {
                $(this).position({top: 0});
                $(this).removeAttr("style");
                $(this).find(".inner .borderleft .arrow").removeAttr("style");
                $(this).find(".inner .borderright .arrow").removeAttr("style");
            });
            $(this).parent().find(".hover").delay(ModelsListItems.hoveringModeTimeout).hide(0, function() {
                if(!ModelsListItems.hovering) {
                    ModelsListItems.hoveringMode = false;
                }
            });
        });
      }
     
      this.checkPosition = function (_object) {
          $(_object).css("display", "block");
          
          if(window.pageYOffset > $(_object).offset().top){
              // top is higher then viewport
              $(_object).offset({top: window.pageYOffset + 5});
              
              // show or hide arrows dedicated to their position in the viewport
              if($(_object).parent().offset().top - window.pageYOffset < 0) {
                  $(_object).find(".inner .borderleft .arrow").hide();
                  $(_object).find(".inner .borderright .arrow").hide();
              } else {
                  $(_object).find(".inner .borderleft .arrow").show();
                  $(_object).find(".inner .borderright .arrow").show();
              }
              
              // positioning arrows
              $(_object).find(".inner .borderleft .arrow").offset({top: $(_object).parent().offset().top+14});
              $(_object).find(".inner .borderright .arrow").offset({top: $(_object).parent().offset().top+14});
          } else if(($(_object).parent().offset().top +  $(_object).height()) > (window.pageYOffset +  window.innerHeight)) {
              // bottom of object is lower then viewport
              $(_object).offset({top: (window.pageYOffset +  window.innerHeight - $(_object).height() - 15)});
              
              // show or hide arrows dedicated to their position in the viewport
              if($(_object).parent().offset().top > (window.pageYOffset +  window.innerHeight - 80)) {
                  $(_object).find(".inner .borderleft .arrow").hide();
                  $(_object).find(".inner .borderright .arrow").hide();
              } else {
                  $(_object).find(".inner .borderleft .arrow").show();
                  $(_object).find(".inner .borderright .arrow").show();
              }
              
              // positioning arrows
              $(_object).find(".inner .borderleft .arrow").offset({top: $(_object).parent().offset().top+14});
              $(_object).find(".inner .borderright .arrow").offset({top: $(_object).parent().offset().top+14});
          } else {
              // normal position
              $(_object).offset({top: $(_object).parent().offset().top-50});
              
              // show or hide arrows dedicated to their position in the viewport
              if($(_object).parent().offset().top - window.pageYOffset < 0) {
                  $(_object).find(".inner .borderleft .arrow").hide();
                  $(_object).find(".inner .borderright .arrow").hide();
              } else {
                  $(_object).find(".inner .borderleft .arrow").show();
                  $(_object).find(".inner .borderright .arrow").show();
              }
              
              // positioning arrows
              $(_object).find(".inner .borderleft .arrow").offset({top: $(_object).parent().offset().top+14});
              $(_object).find(".inner .borderright .arrow").offset({top: $(_object).parent().offset().top+14});
          }
          
          $(_object).css("display", "none");
      }
  }