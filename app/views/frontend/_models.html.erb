
    // create the Data Store
    var store = new Ext.data.Store({
        proxy: new Ext.data.HttpProxy(
			new Ext.data.Connection({
            	url: '/frontend/models',
				method: 'GET',
				extraParams: {format:'ext_json'}
			})
        ),

        // create reader that reads the Topic records
        reader: new Ext.data.JsonReader({
            root: 'models',
            totalProperty: 'results',
            id: 'id',
            fields: [
                'name', 'manufacturer'
            ]
        }),

        // turn on remote sorting
        remoteSort: true
    });
    store.setDefaultSort('name', 'ASC');

    // row expander
    var expander = new Ext.grid.RowExpander({
        tpl : new Ext.Template.from('tpl_model_details')
    });
/*
    var add_button = new Ext.Action({
        text: 'Add',
        handler: function(){
            Ext.example.msg('Click','You clicked on "Action 1".');
        }
    });
*/
    var sm = new Ext.grid.CheckboxSelectionModel({
					header: "Add",
					singleSelect: true
					});
	
    // the column model has information about grid columns
    // dataIndex maps the column to the specific data field in
    // the data store
    var cm = new Ext.grid.ColumnModel([
		expander,
		{
           header: "Name",
           dataIndex: 'name',
           width: 400
        },{
           header: "Manufacturer",
           dataIndex: 'manufacturer',
           width: 200
        }, sm]);

    // by default columns are sortable
    cm.defaultSortable = true;

    var models = new Ext.grid.GridPanel({
        el:'model_list',
        title:'[1] Models',
        store: store,
        cm: cm,
//		sm: sm,
        loadMask: true,
        plugins: expander,

		listeners: {
			cellclick: function( grid, rowIndex, columnIndex, e ){
			  if (columnIndex == 3){
				x_id = grid.getStore().getAt(rowIndex).id;
				//var conn = new Ext.data.Connection();
				//conn.request({
				Ext.Ajax.request({
				    url: '/frontend/add_line?model_id=' + x_id,
//				    method: 'POST',
//	TODO			    params: {"authenticity_token": encodeURIComponent('7839094fc4f002d4585df81e6486429aba7c9350')},
				    success: function(responseObject) {
					    basket_store.load();
				    },
					failure: function() {
						Ext.Msg.alert('Status', 'Failure');
					}
				});
			  }
			}
		},

        tbar: [
            'Search: ', ' ',
            new Ext.app.SearchField({
                store: store,
                width:320
            })
        ],
		bbar: new Ext.PagingToolbar({
            pageSize: 25,
            store: store,
            displayInfo: true,
            displayMsg: 'Displaying topics {0} - {1} of {2}',
            emptyMsg: "No topics to display"
        })
    });


    // trigger the data store load
    store.load({params:{start:0, limit:25}});


  