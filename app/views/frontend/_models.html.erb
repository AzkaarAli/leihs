
    // create the Data Store
    var models_store = new Ext.data.Store({
        proxy: new Ext.data.HttpProxy(
			new Ext.data.Connection({
            	url: '/models/index',
				method: 'GET',
				extraParams: {format:'ext_json'}
			})
        ),

        // create reader that reads the Topic records
        reader: new Ext.data.JsonReader({
            root: 'models',
            totalProperty: 'results',
            id: 'id',
            fields: [
				   {name: 'name', type: 'string'},
				   {name: 'manufacturer', type: 'string'},
				   {name: 'inventory_pools' }
            ]
        }),

        // turn on remote sorting
        remoteSort: true
    });
    models_store.setDefaultSort('name', 'ASC');

    // the column model has information about grid columns
    // dataIndex maps the column to the specific data field in
    // the data store
    var models_cm = new Ext.grid.ColumnModel([
		{
           header: "Name",
           dataIndex: 'name',
           width: 400
        },{
           header: "Manufacturer",
           dataIndex: 'manufacturer',
           width: 200
        },{
           header: "Inventory Pool",
           dataIndex: 'inventory_pools',
           width: 100,
 		   renderer: function(value){
		   				var n = new Array();
		   				for( i=0; i<value.length; i++ )
							n.push(value[i].name)
						return n.join(", ");
					 },
		}]);

    // by default columns are sortable
    models_cm.defaultSortable = true;

    var models_grid = new Ext.grid.GridPanel({
//        el:'model_list',
        title:'Models',
//		height:350,
		split: true,
		region: 'north',
        store: models_store,
        cm: models_cm,
//		sm: sm,
		viewConfig: { forceFit: true },
        loadMask: true,
		listeners: {
			cellclick: function( grid, rowIndex, columnIndex, e ){
			  x_id = grid.getStore().getAt(rowIndex).id;
				models_details.load({
				    url: '/models/details?model_id=' + x_id,
				    text: "Loading...",
				    timeout: 30,
					scripts: true
				});
			}
		},

        tbar: [
            'Search: ', ' ',
            new Ext.app.SearchField({
                store: models_store,
                width: 320
            })
        ],
		bbar: new Ext.PagingToolbar({
            pageSize: 25,
            store: models_store,
            displayInfo: true,
            displayMsg: 'Displaying topics {0} - {1} of {2}',
            emptyMsg: "No topics to display"
        })
    });


    // trigger the data store load
    models_store.load({params:{start:0, limit:25}});

///////////////////////////////////////////////////////////////////////////
	
       var models_details = new Ext.Panel({
	   		id: 'models_details',
			region: 'south',
            split:true,
			height:220,
            //margins:'5 0 0 0',
		    autoScroll:true
		});
