:ruby
  content_for :title do
    title = []
    title << if @item.model.is_package then _("Package") else _("Item") end
    title << if @item.inventory_code.blank? then @item.inventory_code_was else @item.inventory_code end 
    title << @item.model.name
    title.join(' ')
  end

#item.item_edit.innercontent.edit
  = form_for [:backend, current_inventory_pool, @item] do |f|

    .content_navigation
      %a.button.red{:href => backend_inventory_pool_models_path(current_inventory_pool)}
        = _("Cancel Edit")
      %button.button.green{:type => :submit}
        = _("Save %s") % if @item.model.is_package then _("Package") else _("Item") end
      
      =#tmp# f.submit( @item.id ? _("Save and create a Copy") : _("Create and make a Copy"), {:class => "button green", :name => 'copy'}) if is_privileged_user? and not @item.retired?

    .top
      %h1
        =if @item.model.is_package then _("Package") else _("Item") end
        = if @item.inventory_code.blank? then @item.inventory_code_was else @item.inventory_code end 
      %p.subtitle= @item.model.name

    .indent
    
      =#TODO??# render :partial => 'notes', :object => @histories
      = render :partial => 'notifications'
    
      .left
      .right
      .clear

:coffeescript
  jQuery ->
    if #{!flash[:notice].blank?}
      Notification.add_headline
        text: "#{flash[:notice]}"
        type: "success"

    new App.EditItemController #{json_for Field.accessible_by(current_user, current_inventory_pool)}, #{json_for(@item, {:preset => :item_edit})}