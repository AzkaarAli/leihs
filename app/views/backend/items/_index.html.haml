= table_with_search_and_pagination :columns => ["", [_("Model"), 'model_name'], [_("Inventory Code"), 'inventory_code'], _("Location"), _("Status"), _("In stock?"), _("Action")], :with_cvs_export => true, :records => @items do |item|
  - record_path = [:backend, current_inventory_pool, item.model, item]
  %tr
    %td
      =# link_to image_tag(item.model.image_thumb), record_path if item.model.image_thumb
      = icon_tag('package') if item.model.is_package?
      = icon_tag('broken') if item.is_broken?
      = icon_tag('incomplete') if item.is_incomplete?
    %td
      = item.model.name
      - unless item.name.blank?
        %br
        = _("Name")
        %em= item.name
      - if item.parent
        %br
        = _("Part of:")
        = link_to(item.parent.model.name, :controller => 'models', :action => 'show', :id => item.parent.model.id)
    %td= item.inventory_code
    %td
      - if item.inventory_pool_id and item.inventory_pool_id != current_inventory_pool.id
        = link_to item.inventory_pool, params.merge(:allocated_inventory_pool_id => item.inventory_pool_id)
        %br
      = item.location if item.location
    %td
      - if not item.is_broken? and not item.is_incomplete? and item.is_borrowable?
        = icon_tag("accept")
      - else
        %ul{:style => "list-style: disc;"}
          - if item.is_broken?
            %li = _("Broken")
          - if item.is_incomplete?
            %li= _("Incomplete")
          - unless item.is_borrowable?
            %li= _("Unborrowable")
    %td
      - if item.in_stock? # OPTIMIZE 0501 performance: scope or sphinx_scope in_stock?(item)
        = icon_tag('accept')
      - else
        = item.current_borrowing_info
    %td.buttons
      = link_to icon_tag("magnifier") + _("Show"), record_path
      - if is_privileged_user? and item.owner_id == current_inventory_pool.id
        = retire_button(item)
