<%
conditions = (current_inventory_pool ? "name != 'admin'" : nil)
roles = Role.all(:conditions => conditions).sort
inventory_pools = InventoryPool.all.sort
admin_role = Role.find_by_name('admin')
manager_role = Role.find_by_name('manager')

javascript_tag do %>
	function changed_selection(row, v){
		var visibility = (v == <%= admin_role.id %> ? "hidden" : "visible");
		$$('tr#access_right_'+row+' #access_right_inventory_pool_id').each(function(item){item.style.visibility=visibility});			
		$$('tr#access_right_'+row+' #access_level').each(function(item){item.style.visibility=(v != <%= manager_role.id %> ? "hidden" : "visible")});			
	}
	
	document.observe("dom:loaded", function() {
	  $$('#access_right_role_id').invoke('onchange');
	});
<% end

form_tag url_for([:add_access_right, :backend, current_inventory_pool, @user].compact), :method => :post do
	content_tag :table do
		content_tag :tr do
			content_tag :th do %>
				<%= _("Role") %>
			<% end
			content_tag :th do %>
				<%= _("Inventory Pool") %>
			<% end unless current_inventory_pool
			content_tag :th do %>
				<%= _("Access Level") %>
			<% end
			content_tag :th do
			end
		end 
		content_tag :tr, :id => "access_right_0" do
			content_tag :td do %>
				<%= collection_select(:access_right, :role_id, roles, :id, :name, {}, {:size => 5, :onchange => "changed_selection(0, this.value);"}) %>
			<% end
			content_tag :td do %>
				<%= collection_select(:access_right, :inventory_pool_id, inventory_pools, :id, :name, {}, {:size => 5}) %>
			<% end unless current_inventory_pool
			max_level = (current_inventory_pool ? current_user.access_right_for(current_inventory_pool).access_level : 3)
			content_tag :td do %>
				<%= select_tag :access_level, options_for_select((1..max_level).to_a) %>
			<% end
			content_tag :td do %>
				<%= submit_tag _('Add') %>
			<% end
		end
	end
end %>

<br />

<% table :records => @access_rights do |access_right|	

	form_tag url_for([:add_access_right, :backend, current_inventory_pool, @user].compact), :method => :post do
		content_tag :tr, :id => "access_right_#{access_right.id}" do

			if access_right.role == admin_role
				content_tag :td, :colspan => 5 do %>
					<%= access_right.role.name %>
				<% end
			else
				content_tag :td do
					@access_right = access_right # only used by collection_select %>
					<%= collection_select(:access_right, :role_id, roles - [admin_role], :id, :name, {}, {:onchange => "changed_selection(#{access_right.id}, this.value);"}) %>
				<% end
				content_tag :td do
					if access_right.inventory_pool_id %>
						<%= access_right.inventory_pool %>
						<%= hidden_field_tag "access_right[inventory_pool_id]", access_right.inventory_pool_id %>
					<% end
				end
				max_level = (current_inventory_pool ? current_user.access_right_for(current_inventory_pool).access_level : 3)
				content_tag :td do %>
					<%= select_tag :access_level, options_for_select((1..max_level).to_a, access_right.access_level) %>
				<% end
				content_tag :td do %>
					<%= submit_tag _('Save') %>
				<% end
			end

			content_tag :td, :class => "buttons" do
				remove_link = if current_inventory_pool # OPTIMIZE
									remove_access_right_backend_inventory_pool_user_path(current_inventory_pool, @user, :access_right_id => access_right)
								 else
									remove_access_right_backend_user_path(@user, :access_right_id => access_right)
								 end %>
				<%= link_to icon_tag("cancel") + " " + _('Remove'),
							remove_link,
							:confirm => _("Are you sure?"),
							:method => :delete %>
				<% if current_inventory_pool
					if access_right.suspended? %>
						<%= _("Suspended until %s") % access_right.suspended_until.strftime("%d.%m.%Y") %>
						<%= link_to(icon_tag('emoticon_unhappy') + " " + _('Reinstate'),
									reinstate_access_right_backend_inventory_pool_user_path(current_inventory_pool, @user, :access_right_id => access_right), 
									:method => :post) %>
					<% else %>
						<%= link_to icon_tag("flag_red") + " " + _("Suspend"), suspend_access_right_backend_inventory_pool_user_path(current_inventory_pool, @user, :access_right_id => access_right), :id => "suspend" %>
					<% end
				end
			end
		end
	end
end 

content_tag :div, :id =>"dialog-form", :title => _("Suspend") do %>
	<% form_tag do
		content_tag :h4 do %>
			<%= _("The user will not be able to place any orders") %>
		<% end
		content_tag :p, :style => "margin: 0.5em 0 0.5em 0;" do %>
			<%= _("Suspended Until") %>:
			<br />
			<%= text_field_tag :suspended_until %>
		<% end
		content_tag :p, :style => "margin: 0.5em 0 0.5em 0;" do %>
			<%= _("Reason") %>:
			<br />
			<%= text_area_tag :reason %>
		<% end %>
		<%= submit_tag _("Suspend") %>
	<% end
end

javascript_tag do %>
	jQuery(document).ready(function($){
		$("#dialog-form").dialog({
			autoOpen: false,
			height: 300,
			width: 500,
			modal: true
		 });
		
		$("#suspended_until").datepicker({
			dateFormat: 'dd-mm-yy',
			minDate: 0
		});

		$("#suspend").click(function(){
			$("#dialog-form form").attr("action", $(this).attr("href"));
			$("#dialog-form").dialog('open');
			return false;
		});
	});
<% end %>

<hr />
<h4><%= _("Access levels") %></h4>
<p><%= _("Access levels, handled per inventory pool, are used to determine what system functionality a user is allowed to see and use.") %></p>
