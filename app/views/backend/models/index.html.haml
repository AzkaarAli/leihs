-content_for :title, _("List of Inventory")
#inventory.innercontent

  .top
    %h1= yield :title
  
  %section
    .inlinetabs
      = link_to backend_inventory_pool_contracts_path(current_inventory_pool, :filter => "", :year => params[:year], :month => params[:month], :query => params[:query]), :class => "tab#{' active' unless params[:filter] && params[:filter] == ""}" do
        %span.text
          = _("All")
      = link_to backend_inventory_pool_contracts_path(current_inventory_pool, :filter => "signed", :year => params[:year], :month => params[:month], :query => params[:query]), :class => "tab#{' active' if params[:filter] == 'signed'}" do
        %span.text
          = _("Own Inventory")
      = link_to backend_inventory_pool_contracts_path(current_inventory_pool, :filter => "closed", :year => params[:year], :month => params[:month], :query => params[:query]), :class => "tab#{' active' if params[:filter] == 'closed'}" do
        %span.text
          = _("Packages")
    
    .list
      %ul.navigation.line
        %li.search
          = form_tag("", :method => :get, :autocomplete => :off) do
            %input{:type => "text", :name => "query", :value => "#{params[:query]}", :placeholder => _("Suchen..."), :class => "clearable"}
            = image_tag "loading.gif", :class => "loading"
            -unless params[:query].blank?
              %strong
                = _("found %i") % @models_and_options.total_entries
            = _("in")
            %strong
              = @models_and_options.total_entries
            = _("entries%s") % "."
          = image_tag "loading.gif", :class => "loading"
        %li.historical_search
      - if @models_and_options.blank?
        %ul.line
          %li.name
            %strong
              = _("No entry found")
              - unless params[:query].blank?
                = _("for '%s'") % params[:query]
  
  - unless @models_and_options.blank?
    .pagination_container

:javascript
  
  $(document).ready(function(){
    $('section .list').append($.tmpl("tmpl/line", #{render(:partial => "backend/models/index.json.rjson",
                                                            :locals => {:models => @models_and_options,
                                                                        :with => {:items => {:query => @query},
                                                                                  :categories => {}}
                                                                        })}));
    
    // setup ListSearch
    ListSearch.setup();
    
    // setup ListPagination
    ListPagination.current_page = #{params[:page].blank? ? 0 : params[:page]};
    ListPagination.per_page = #{$per_page};
    ListPagination.total_entries = #{@models_and_options.total_entries};
    ListPagination.next_text = "#{_('Next')}";
    ListPagination.previous_text = "#{_('Previous')}";
    ListPagination.setup();
  });