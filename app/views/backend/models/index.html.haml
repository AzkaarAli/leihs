-content_for :title, _("List of Inventory")
#inventory.innercontent

  .top
    %h1= yield :title
  
  %section
    .inlinetabs
      = link_to backend_inventory_pool_models_path(current_inventory_pool, :query => params[:query]), :class => "tab#{' active' if params[:borrowable].blank? and params[:retired].blank?}" do
        %span.text= _("All")
      = link_to backend_inventory_pool_models_path(current_inventory_pool, :borrowable => true, :query => params[:query]), :class => "tab#{' active' if params[:borrowable].to_s == 'true'}" do
        %span.text= _("Borrowable")
      = link_to backend_inventory_pool_models_path(current_inventory_pool, :borrowable => false, :query => params[:query]), :class => "tab#{' active' if params[:borrowable].to_s == 'false'}" do
        %span.text= _("Not Borrowable")
      = link_to backend_inventory_pool_models_path(current_inventory_pool, :retired => true, :query => params[:query]), :class => "tab#{' active' if params[:retired].to_s == 'true'}" do
        %span.text= _("Retired")
    
    .list
      %ul.navigation.line
        %li.search
          = form_tag("", :method => :get, :autocomplete => :off) do
            %input{:type => "text", :name => "query", :value => "#{params[:query]}", :placeholder => _("Suchen..."), :class => "clearable"}
            = image_tag "loading.gif", :class => "loading"
            -unless params[:query].blank?
              %strong
                = _("found %i") % @models_and_options.total_entries
            = _("in")
            %strong
              = @models_and_options.total_entries
            = _("entries%s") % "."
          = image_tag "loading.gif", :class => "loading"
        %li.filter
          %label.broken
            %input{:type => :checkbox}
            %span= _("In Stock")
          %label.owned
            %input{:type => :checkbox}
            %span= _("Owned")
          %label.broken
            %input{:type => :checkbox}
            %span= _("Broken")
          %label.responsible
            %select{:title => _("Responsible Department")}
              %option{:default => true}
              %option "Responsible 1"
              %option "Responsible 2"
              %option "Responsible 3"
      - if @models_and_options.blank?
        %ul.line
          %li.name
            %strong
              = _("No entry found")
              - unless params[:query].blank?
                = _("for '%s'") % params[:query]
  
  - unless @models_and_options.blank?
    .pagination_container

:javascript
  
  $(document).ready(function(){
    $('section .list').append($.tmpl("tmpl/line", #{@list_json}));
    
    // setup ListSearch
    ListSearch.setup();
    
    // setup ListPagination
    ListPagination.current_page = #{params[:page].blank? ? 0 : params[:page]};
    ListPagination.per_page = #{$per_page};
    ListPagination.total_entries = #{@models_and_options.total_entries};
    ListPagination.next_text = "#{_('Next')}";
    ListPagination.previous_text = "#{_('Previous')}";
    ListPagination.setup();
    
    // setup line toggler
    $(".toggle[data-toggle_target]").expandable_line()
  });