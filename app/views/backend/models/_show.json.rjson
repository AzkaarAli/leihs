# default response
h = {
  type: model.class.to_s.underscore,
  id: model.id,
  name: model.name,
  manufacturer: model.manufacturer
}

# extendable informations
if with ||= nil
  if with[:items] and model.respond_to? :items
    items = model.items
    items = items.search2(with[:items][:query]) if with[:items][:query] 
    h[:items] = render(:partial => "backend/items/index.json.rjson", :locals => {:items => items, :with => with[:items]})
  end

  if with[:categories] and model.respond_to? :categories
    h[:categories] = model.categories.as_json # TODO
  end

  if with[:availability]
    customer_user = with[:availability][:user]
    current_inventory_pool = with[:availability][:inventory_pool]  

    if customer_user and current_inventory_pool and (start_date = with[:availability][:start_date]) and (end_date = with[:availability][:end_date])
      # NOTE we display total_rentable_in_stock/total_rentable
      h['max_available']  = model.availability_changes_in(current_inventory_pool).maximum_available_in_period_for_user(customer_user, start_date, end_date)
      h['total_rentable'] = model.total_borrowable_items_for_user(customer_user, current_inventory_pool)
    elsif current_inventory_pool
      borrowable_items = model.items.scoped_by_inventory_pool_id(current_inventory_pool).borrowable
      # NOTE we display total_rentable_in_stock/total_rentable 
      h['total_rentable_in_stock'] = borrowable_items.in_stock.count
      h['total_rentable'] = borrowable_items.count
    end
    
  end
end

h
