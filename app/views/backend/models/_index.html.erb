<% table_with_search_and_pagination :columns => ["", [_("Model"), 'name'], (params[:source_path] ? [_("Manufacturer"), 'manufacturer'] : _("Categories")), _("Available Items"), _("Action")],
						   			:records => @models do |model|
			record_path = backend_inventory_pool_model_path(current_inventory_pool, model, :filter => params[:filter]) %>
			
			<tr id="<%= "model_#{model.id}" %>">
				<td>
					<%#Not needed 0611 = link_to image_tag(model.image_thumb), record_path if model.image_thumb and !params[:source_path] %>
					<%#= image_tag(model.image_thumb) if model.image_thumb %>
					<%#temp#multi-add#= check_box_tag 'model_id[]', model.id, false %>
					<%= icon_tag('package') if model.is_package? %>
				</td>
				<td><%= model.name %></td>
				<td>
					<% if params[:source_path] %>
						<%= model.manufacturer %>
					<% else 
						content_tag :ul, :style => "list-style: disc;" do
							model.categories.each do |category|
								content_tag :li do %>
									<%= category.name %>
								<% end
							end
						end
					end %>
				</td>

				<% if params[:source_path] # we are in a greybox
					max_available = model.availability_changes.in(current_inventory_pool).maximum_available_in_period_for_user(@user, @start_date, @end_date)
					content_tag :td, :class => "valid_#{(max_available > 0)}" do %>
						<%= max_available %>
					<% end
				else
					content_tag :td do
						if ["own", "all"].include?(params[:filter]) %>
							<%= current_inventory_pool.own_items.scoped_by_model_id(model).in_stock.count %> <%= _("of")%> <%= current_inventory_pool.own_items.scoped_by_model_id(model).count %>
						<% else %>
							<%= current_inventory_pool.items.scoped_by_model_id(model).in_stock.count %> <%= _("of")%> <%= current_inventory_pool.items.scoped_by_model_id(model).count %>
						<% end
					end
				end %>

				<td class="buttons">

					<% if params[:source_path] # we are in a greybox
							var_id = (model.is_a?(Model) ? "model_id" : "model_group_id")
							glue = (params[:source_path].include?('?') ? '&' : '?' )
							url = "#{params[:source_path]}#{glue}#{var_id}=#{model.id}"
						%>
						<%=	link_to(icon_tag("package_add") + " " + _("Select"), url,
									:method => 'post', :target=> '_top') if @line.nil? or @line.model != model %>
							
					<% elsif params[:layout] == "modal" %>
	                    <%= link_to(icon_tag("connect") + " " + _("Select"), "#", :onclick => "top.document.getElementById('item_model_id').value = '#{model.id}';top.document.getElementById('model_name').textContent = '#{model.name.gsub('"', '\"').gsub(/\r\n/,' ')}';parent.parent.GB_hide(); return false;") %>
	                <% else %>						
						<ul>
							<li><%= link_to icon_tag("magnifier") + _("Show"), record_path %></li>
							<li><%= link_to _("Remove"), backend_inventory_pool_model_compatible_path(current_inventory_pool, @model, model),
											:confirm => _("Are you sure?"),
											:method => :delete if @model %></li>
							<% content_tag :li do %>
								<%= link_to _("Delete"), destroy_package_backend_inventory_pool_model_path(current_inventory_pool, model),
											:confirm => _("Are you sure?"),
											:method => :delete if model.package_items.empty? and model.order_lines.empty? and model.contract_lines.empty? %>
							<% end unless params[:packages].blank? %>
						</ul>
					<% end %>
				</td>
			</tr>
<% end %>