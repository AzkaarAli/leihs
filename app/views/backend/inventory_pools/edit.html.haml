- content_for :title, @inventory_pool

.innercontent.form_edit.edit.inventory_pool_edit

  = form_for [:backend, @inventory_pool], html: {class: "indent", name: "form"} do |f|

    .content_navigation
      - if is_admin?
        %a.button.red{:href => root_path}
          = _("Cancel")
      %button.button.green{:type => :submit}
        = _("Save %s") % _("Inventory Pool")

    .top
      %h1= _("Edit %s") % _("Inventory Pool")

    .left
      %section
        %h2= _("Basic Information")
        .inner
          .field.text
            .key
              %h3= "#{_("Name")} *"
            .value
              .input
                %input{type: "text", name: "inventory_pool[name]", value: @inventory_pool.name}
          .field.text
            .key
              %h3= "#{_("Short Name")} *"
              %p.description
                = _("Additional label in inventory codes")
            .value
              .input
                %input{type: "text", name: "inventory_pool[shortname]", value: @inventory_pool.shortname}
          .field.text
            .key
              %h3= "#{_("E-Mail")} *"
              %p.description
                = _("Used for sending e-mails from leihs")
            .value
              .input
                %input{type: "text", name: "inventory_pool[email]", value: @inventory_pool.email}
          .field.text
            .key
              %h3= "#{_("Description")}"
              %p.description
                = _("Visible for borrowers in frontend")
            .value
              .input
                %textarea{type: "text", name: "inventory_pool[description]", rows: 6}= @inventory_pool.description
          .field.text
            .key
              %h3= "#{_("Default Contract Note")}"
              %p.description
                = _("This note is added to any contract, but can be changed individually before actually printing and signing each contract.")
            .value
              .input
                %textarea{type: "text", name: "inventory_pool[default_contract_note]", rows: 6}= @inventory_pool.default_contract_note
          .field.text
            .key
              %h3= "#{_("Print Contracts")}"
              %p.description
                = _("Print dialog will open aut.")
            .value
              .input
                %input{type: "checkbox", name: "inventory_pool[print_contracts]", checked: @inventory_pool.print_contracts}
    
    .right

      %section#workdays
        %h2= _("Workdays")
        .inner
          - [1,2,3,4,5,6,0].each do |i|
            .field.text
              .key
                %h3= "#{I18n.t('date.day_names')[i]}"
              .value
                .input
                  %select{:name => "inventory_pool[workday_attributes][workdays][]"}
                    %option{:label => _("Open"), :value => Workday::WORKDAYS[i]}= _("Open")
                    %option{:label => _("Closed"), :value => "", :selected => @inventory_pool.workday.closed_days.include?(i) ? true : nil}= _("Closed")

      %section#holiday
        %h2= _("Closed Days")
        .inner
          .field.text
            #process_helper
              .dates
                .container
                  %input#start_date.datepicker{:type => "text", :autocomplete => "off"}
                  %label{:for => "start_date"}
                    = _("Start Date")
                  %label.datepicker.icon{:for => "start_date", :title => _("Open Datepicker")}
                = "-"
                .container
                  %input#end_date.datepicker{:type => "text", :autocomplete => "off"}
                  %label{:for => "end_date"}
                    = _("End Date")
                  %label.datepicker.icon{:for => "end_date", :title => _("Open Datepicker")}
                .container
                  %input#name{:type => "text", :autocomplete => "off"}
                  %label{:for => "name"}
                    = _("Name")
              %a.button.white.add-holiday= _("Add")
          - @holidays.each_with_index do |holiday, i|
            .field-inline-entry{:"data-index" => i}
              - if holiday._destroy
                %input{:type => :hidden, :name => "inventory_pool[holidays_attributes][#{i}][_destroy]", :value => 1}
              - if holiday.id
                %input{:type => :hidden, :name => "inventory_pool[holidays_attributes][#{i}][id]", :value => holiday.id}
              %input{:type => :hidden, :name => "inventory_pool[holidays_attributes][#{i}][name]", :value => holiday.name}
              %input{:type => :hidden, :name => "inventory_pool[holidays_attributes][#{i}][start_date]", :value => holiday.start_date}
              %input{:type => :hidden, :name => "inventory_pool[holidays_attributes][#{i}][end_date]", :value => holiday.end_date}
              %strong
                %span{class: holiday._destroy && "tobedeleted"}= holiday.name
              %span{class: holiday._destroy && "tobedeleted"}= l holiday.start_date
              %span{class: holiday._destroy && "tobedeleted"}= "-"
              %span{class: holiday._destroy && "tobedeleted"}= l holiday.end_date
              .floatright
                %span.clickable.delete-holiday{:title => _("Delete %s") % _("Closed Day")}
                  = _("Delete")

    .clear

:coffeescript
  notice = #{flash[:notice].to_json}
  error = #{flash[:error].to_json}

  jQuery ->
    if notice
      Notification.add_headline
        text: notice
        type: "success"

    if error
      Notification.add_headline
        text: error
        type: "error"

    $("#process_helper input.datepicker").datepicker

    new App.InventoryPoolEditController
      el: ".inventory_pool_edit"
