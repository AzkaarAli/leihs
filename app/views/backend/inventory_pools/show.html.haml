-content_for :title, _("Daily View")
#daily.innercontent
  %h1= l Date.today, :format => :day_long
  
  .navigation
    = button_tag(:class => "today button white") do
      = _("Today")
    = button_tag(:class => "datepicker button white") do
      .icon.datepicker
    = button_tag(:class => "day back button white") do
      .icon.back
    = button_tag(:class => "day forward button white") do
      .icon.forward
      
  .clear
  
  -if last_visitors
    %p.subtitle 
      = _("Last Visitors:")
      != last_visitors
    
  %hr
  
  %section.order
    .inlinetabs
      .tab
        %span.text
          = _("Orders")
        .icon.orders
    .list
  
  %section.hand_over
    .inlinetabs
      .tab
        %span.text
          = _("Hand Overs")
        .icon.hand_over
        .badge.red
          = @hand_overs_overdue.size
    .list
     
  %section.take_back
    .inlinetabs
      .tab
        %span.text
          = _("Take Backs")
        .icon.take_back
        .badge.red
          = @take_backs_overdue.size
    .list
    
= render :partial => 'backend/inventory_pools/bar_chart'
      
:javascript
  
  $(document).ready(function(){
    DailyView.setup();
  });

  var DailyView = new DailyView();
  
  function DailyView() {
    
    this.setup = function() {
      
      this.setupTemplates();
      this.setupShowMore();
      
      //this.setupTips();
      // this.setupActions();
    }
    
    this.setupTemplates = function() {
      
      $('.order .list').append($.tmpl("tmpl/line", #{@orders.to_json}));
      $('.hand_over .list').append($.tmpl("tmpl/line", #{@hand_overs_overdue.to_json}));
      $('.hand_over .list').append($.tmpl("tmpl/line", #{@hand_overs.to_json}));
      $('.take_back .list').append($.tmpl("tmpl/line", #{@take_backs_overdue.to_json}));
      $('.take_back .list').append($.tmpl("tmpl/line", #{@take_backs.to_json}));
    }
    
    this.setupTips = function() {
      
      $("#daily .item li.purpose").each(function(){
        
        if($(this).data("title").length > DailyView.purpose_max) {
          $(this).qtip({
             content: {
                text: $(this).data("title")
              },
              position: {
                target: $(this).find(".tip_target")
              }
          });
        }
      });
      
      $("#daily .item li.quantity").each(function(){
        
        $(this).qtip({
          content: {
            text: $(this).find(".tip")
          },
          position: {
            target: $(this).find(".tip_target")
          }
        });
      });
    }
    
    this.setupActions = function() {
    
      $("#daily .item li.actions").live("ajax:success", function(response){ // TODO
        var to_remove = $(this).closest("table.item");
        to_remove.fadeOut(400, function(){
          $(this).remove();
          // TODO $("."+response.type+"_list").append($.tmpl("tmpl/line", response.data));
        });
      }).live("ajax:error", function(event, response){
        Dialog.add({
          trigger: $(this),
          title: _("Not Approvable"),
          content: response.responseText
        });
      });
    }
      
    this.setupShowMore = function() {
  
      $(".list").each(function(){
      
        var text = $(this).parent().find(".tab .text").first().html();
      
        $(this).showMore({
          min: 4,
          max: 8,
          offset: {
            top: -30
          },
          more: "<li><span class='icon'></span>%d #{_('more')} "+text+"</li>",
          less: "<li><span class='icon'></span>#{_('show less')}</li>"
        });
      });
    }
  }