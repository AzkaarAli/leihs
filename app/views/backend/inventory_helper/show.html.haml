-content_for :title, _("Inventory Helper")

#inventory_helper.innercontent

  .top
    %h1= yield :title
    .subtitle= _("Process multiple fields for multiple items in a row")

  %br
  .indent#field_selection

    .container
      %input{:type => "text", :name => "fieldname", :autocomplete => "off", :id => "fieldname"}
      %label.icon.arrow.down{:for => "fieldname"}
      %label{:for => "fieldname"}
        = _("Select Field")

    %form.selection_group.form_edit.edit
      %section.left
      %section.right
      %h2= _("no fields selected")
      .clear

  %hr
  %br

  .indent

    = form_tag "", :id => "item_selection" do 
      .container

        %input{:class => "autocomplete barcode_target",
          :type => "text",
          :autocomplete => "off",
          :name => "inventory_code",
          :placeholder => _("Inventory Code"),
          :title => _("Inventory Code"),
          :"data-url" => "/backend/inventory_pools/#{current_inventory_pool.id}/search?types[]=item&with[inventory_code]=1&with[location_as_string]=1",
          :"data-autocomplete_class" => "select_inventory_helper_item", 
          :"data-autocomplete_element_tmpl" => "tmpl/autocomplete/select_inventory_helper_item",
          :"data-autocomplete_value_attribute" => "inventory_code"}

        %label{:for => "code"}
          = _("Inventory Code")

      %button.button.green{:type => "submit"}
        = _("Apply Fields on Item")
        .icon.placeholder

    %br

    #item.form_edit
      .content_navigation
        %button.button.white.edit
          = _("Edit Item")
          .edit.icon
        %button.button.red.cancel
          = _("Cancel Edit")
        %button.button.green.save
          = _("Save %s") % [_("Item")]
      .notifications
      %form
        %h2.none_selected= _("no item selected")
        .left
        .right
        .clear

:coffeescript

  jQuery -> 
    new App.InventoryHelperController #{json_for Field.accessible_by(current_user, current_inventory_pool)}
