%aside#aside
  .header
    .borderright
    .headerinner
      %ul.navigation
        %li.active{:class => "order"}
          %a{:href => "#", :title => _("Order")}
            %span{:class => "icon"}
        %li{:class => "templates"}
          %a{:href => "#", :title => _("Order Templates")}
            %span{:class => "icon"}
    .borderleft
  
  .inner
    #compactOrder
      %h3
        = _("Order")
      %a.edit{:href => ""} 
        = _("edit")
      .clear
        -# TODO Franco: Perhaps this doubled iteration is not efficent??
        - this_ip_id = nil
        - order_lines = current_user.get_current_order.order_lines.sort {|a,b| [a.inventory_pool_id, a.created_at] <=> [b.inventory_pool_id, b.created_at]}
        - order_lines.each do |order_line|
          - unless order_line.inventory_pool_id == this_ip_id
            - this_ip_id = order_line.inventory_pool_id
            %section.pool
              = link_to order_line.inventory_pool, order_line.inventory_pool, :class => "pool", :title => _("View %s") % order_line.inventory_pool
              %ul
                - order_lines.each do |line|
                  - if line.inventory_pool_id == this_ip_id
                    %li.item
                      %span.name
                        %a{:href => "#", :title => _("%s (View in Order)") % line.model.name}
                          = truncate(line.model.name, 22)
                          - unless line.quantity <= 1
                            %span.amount
                              = "(#{line.quantity})"
                      %span.delete
                        %a{:href => "#", :title => _("Delete this Line")}
                          = "x"
                      %span.clear
              
      .orderPurpose
        %hr
        %h3
          = _("Purpose")
        %textarea{}
          = _("Please specify your order purpose here...")
          
    #compactTemplates
      %h3 
        = _("Order Templates")
      %a.edit{:href => ""}
        = _("edit")
      .clear
    
    .clear      
  
  .footer
    .borderleft
    .footerinner
      .button{:class => "green"}
        %a{:href => "#", :title => _("Submit")} 
          = _("Submit")
    .borderright
    
:javascript
  
  $(document).ready(function () {
    AsideNavigation.setup();
    CompactOrder.setup();
  });

  // ASIDE NAVIGATION
  var AsideNavigation = new AsideNavigation();
  function AsideNavigation () {
    
    this.setup = function () {
      $('#aside .navigation .order a').bind('click', function(){
        $('#compactOrder').stop().show();
        $('#aside .footer .button').stop().show();
        $('#compactTemplates').stop().hide();
        AsideNavigation.switchActive($(this).parent());
      });
      
      $('#aside .navigation .templates a').bind('click', function(){
        $('#compactOrder').stop().hide();
        $('#aside .footer .button').stop().hide();
        $('#compactTemplates').stop().show();
        AsideNavigation.switchActive($(this).parent());
      });
    }
    
    this.switchActive = function(_newActive) {
      $("#aside .navigation .active").removeClass("active");
      $(_newActive).addClass("active");
    }
  }
  
  // COMPACT ORDER
  var CompactOrder = new CompactOrder();
  function CompactOrder () {
  
    this.purposeMin = 6;
    
    this.setup = function () {
      $('#compactOrder .orderPurpose textarea').bind('focus', function(){
        // save startText in data if it is not set yet
        if(!$(this).data("startText") && !$(this).text()) {
          $(this).data("startText", $(this).text());
        } else if (!$(this).data("startText") && $(this).text()) {
          $(this).data("startText", $(this).val());
        }
        
        // clear the start value/text
        if($(this).val() == $(this).data("startText")) {
          $(this).val("");
        } else {
          $(this).text("");
        }
      });
      
      $('#compactOrder .orderPurpose textarea').bind('blur', function(){
        // set start text if value is empty after blur
        if(!$(this).val()) {
          $(this).val($(this).data("startText"));
        }
        
        // check count of value
        if($(this).val().length < CompactOrder.purposeMin) {
          Dialog.add($(this), "<p>TEST</p>", {title: "TITLE"});
        }
      });
      
      $('#compactOrder .orderPurpose textarea').bind('blur change mousedown keydown', function(){
        
      });
    }
  }