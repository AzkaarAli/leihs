{{html $problems = Line.get_problems($item.data), ""}}

%ul{:class => "line ${type} ${contract.action}{{if $problems.length}} error{{/if}}"}
  
  .main
    %li.select
      %label
        = check_box_tag "selected"
    %li.quantity
      %input{:name => "quantity", :type => "text", :value => "", :autocomplete => "off"}
    %li.max_quantity
      = "/${quantity}"
    %li.inventory_code
      ${item.inventory_code}
    %li.name
      %strong ${model.name}

    {{tmpl(purpose) "tmpl/cell/purpose"}}

    {{tmpl({problems: $problems}) "tmpl/line/problems"}}
      
  .actions     
    %li.actions
      .multibutton
        .alternatives
          .trigger
            .arrow
          = link_to "/backend/inventory_pools/${currentInventoryPool.id}/users/${contract.user.id}/take_back/update_lines",
          :class => "button white open_dialog", 
          :"data-tmpl" => "tmpl/dialog/calendar", 
          :"data-dialog_class" => "calendar medium",
          :"data-on_success" => 'HandOver.update_visits(response);',
          :"data-dialog_ready" => "new BookingCalendar({computeAvailability: false, limitMaxQuantity: false, startDateDisabled: true, withoutQuantity: true})",
          :"data-ref_for_dialog" => "Line.data_for_edit_lines($(_this).closest('.line').tmplItem().data)" do
            .icon.timerange
            ${_jed("Edit")}
            
        = link_to "#", :class => "button white open_dialog",
        :"data-tmpl" => "tmpl/dialog/documents/contract",
        :"data-url_for_dialog" => "/backend/inventory_pools/${currentInventoryPool.id}/contracts/${contract.id}.json",
        :"data-dialog_id" => "print",
        :"data-dialog_class" => "medium documents value_list" do
          .contract.icon
          ${_jed("Contract")}
          ${contract.id}