%ul.line{:class => "${type}"}
  .container
  
    {{tmpl($item.data.user) "tmpl/cell/user_name"}}
  
    %li.items.hastip
      %span.number
        ${quantity}
      = _("Items")
      .tip.lines
        ${$startdate = 0, ""}
        ${$enddate = 0, ""}
        {{each(i, line) order_lines}}
        {{if line.start_date != $startdate || line.end_date != $enddate}}
        ${$startdate = line.start_date, ""}
        ${$enddate = line.end_date, ""}
        {{if i != 0}}
        %hr
        {{/if}}
        .date
          {{html formatDate(new Date(line.start_date.replace(/-/g, "/")), i18n.selected.tips.dateFormat)}}
          = "-"
          {{html formatDate(new Date(line.end_date.replace(/-/g, "/")), i18n.selected.tips.dateFormat)}}
        .range
          ${Math.round((new Date(line.end_date.replace(/-/g, "/")) - new Date(line.start_date.replace(/-/g, "/"))) / (1000 * 60 * 60 * 24)+1)}
          = _("Days")
        .clear
        %table
          {{each(i, line) order_lines}}
          {{if line.start_date == $startdate && line.end_date == $enddate}}
          %tr
            %td.quantity
              ${line.quantity}
            %td.model_name
              {{if line.model}}
              ${line.model.name}
              {{else}}
              %i
                = _("Model not present any more")
              {{/if}}
          {{/if}}
          {{/each}}  
        {{/if}}
        {{/each}}
    
    %li.date
      {{html formatDate(new Date(created_at.replace(/T.*$/g, "").replace(/-/g, "/")), i18n.selected.tips.dateFormat)}}
    
    %li.range
      {{if max_range}}
      %span.text
        %span.grey
          = _("for max.")
      %span.number
        ${max_range}
      %span.text
        = _("Days")
      {{/if}}
        
    {{if String(purpose).length > 70}}
    %li.purpose.hastip
      %span.text
        %i
          {{html String(purpose).substring(0, 70) }}
          {{if String(purpose).length > 70}}
          {{html "..."}}
          {{/if}}
      .tip
        %p
          ${purpose}
    {{else}}
    %li.purpose
      %span.text
        %i
          ${purpose}
    {{/if}}
        
  %li.actions
    .multibutton
      .alternatives
        .trigger
          .arrow
        = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/acknowledge/${id}", :class => "button white" do
          .icon.edit
          = _("Edit")
        
        -#TODO: "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/acknowledge/${id}/approve"
        -#TODO: :remote => true,
        = link_to "javascript:void(0);", :onclick => "alert('Diese Funktion wird bald implementiert...'); return false;",  
          :class => "button white",
          :method => :post,
          :"data-rel" => "tmpl/dialog/acknowledge/approve", 
          :"data-dialog_class" => "acknowledge",
          :"data-on_success" => 'window.location = "http://"+location.host+"/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/hand_over"',
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
          .icon.hand_over
          = _("Hand Over")
          
        = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/acknowledge/${id}/reject", 
          :class => "button red open_dialog", 
          :"data-rel" => "tmpl/dialog/acknowledge/reject", 
          :"data-dialog_class" => "acknowledge",
          :"data-on_success" => 'List.remove_line($(this).closest(".dialog").data("trigger").closest(".line"), "red")',
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
          .icon.delete
          = _("Reject")
          
      = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/acknowledge/${id}/approve", 
        :class => "button white",
        :remote => true,
        :method => :post,
        :"data-rel" => "tmpl/dialog/acknowledge/approve", 
        :"data-dialog_class" => "acknowledge",
        :"data-on_success" => 'List.remove_line($(this).closest(".line"), "green")',
        :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
        .icon.approve
        = _("Quick Approve")