${Line.recompute_availability($item.data), ""}
{{html $valid = (is_available && is_valid), ""}}
{{html $error = (!is_available || !is_valid), ""}}
{{html $assigned = (item != undefined), ""}}
{{html $problems = Line.get_problems($item.data), ""}}

%ul{:class => "line ${type}{{if $valid}} valid{{/if}}{{if $error}} error{{/if}}{{if $assigned}} assigned{{/if}}"}
  
  .main  
    %li.select
      %label
        %input{:type => "checkbox"}        
    %li.inventory_code
      %label.container{:for => "inventory_code_${id}"}
        = form_tag "/backend/inventory_pools/${current_inventory_pool}/users/${contract.user.id}/hand_over/assign_inventory_code", :method => :post, :remote => true do
          = hidden_field_tag "line_id", "${id}"
          %input.autocomplete{:id => "inventory_code_${id}",
                              :type => "text",
                              :name => "inventory_code",
                              :placeholder => _("Inventory Code"),
                              :title => _("Inventory Code"),
                              :"data-url" => "/backend/inventory_pools/${current_inventory_pool}/items?model_id=${model.id}&with[location]=true",
                              :"data-autocomplete_class" => "assign_inventory_code", 
                              :"data-autocomplete_element_tmpl" => "tmpl/autocomplete/assign_inventory_code",
                              :"data-autocomplete_value_attribute" => "inventory_code",
                              :"data-autocomplete_search_on_focus" => 'true',
                              :"data-autocomplete_search_only_on_focus" => 'true',
                              :"data-autocomplete_select_callback" => "HandOver.assign_through_autocomplete",
                              :value => "{{if item}}${item.inventory_code}{{/if}}"}
          .arrow.icon
    %li.name
      %strong{:title => "${model.name}"} ${Str.sliced_trunc(model.name, 62)}
      
    {{if $problems.length > 0}}
    %li.problems.hastip
      .tip.problems
        %ul
          {{each(i, problem) $problems}}
          %li= "${problem}"
          {{/each}}
      %strong 
        = _("Problems")
        (${$problems.length})
    {{/if}}
 
  .actions     
    %li.actions
      .multibutton
        .alternatives
          .trigger
            .arrow
          = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${contract.user.id}/hand_over/remove_lines?line_ids[]=${id}",
          :class => "button red",
          :method => "delete",
          :remote => "true",
          :"data-rel" => "tmpl/dialog/hand_over/delete_line",
          :"data-dialog_class" => "delete_line",
          :"data-on_success" => 'HandOver.remove_lines([$(this).parents(".line")])' ,
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
            .icon.delete
            = _("Delete")
            
        = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${contract.user.id}/hand_over/update_lines",
          :class => "button white open_dialog", 
          :"data-rel" => "tmpl/dialog/calendar/edit_single", 
          :"data-dialog_class" => "calendar",
          :"data-on_success" => 'HandOver.update_visits(response);',
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
          .icon.timerange
          = _("Edit")
        
  .extended
    {{if model.hand_over_note}}
    .note
      ${model.hand_over_note}
    {{/if}}
