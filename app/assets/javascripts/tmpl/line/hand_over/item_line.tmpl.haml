{{html $valid = (is_available && is_valid), ""}}
{{html $error = (!is_available || !is_valid), ""}}
{{html $assigned = (item != undefined), ""}}

%ul{:class => "line ${type}{{if $valid}} valid{{/if}}{{if $error}} error{{/if}}{{if $assigned}} assigned{{/if}}"}
  
  .main  
    %li.select
      %label
        {{if ($assigned)}}
        %input{:type => "checkbox", :checked => true}
        {{else}}
        %input{:type => "checkbox"}        
        {{/if}}
    %li.inventory_code
      .container
        = form_tag "/backend/inventory_pools/${current_inventory_pool}/users/${contract.user.id}/hand_over/assign_inventory_code", :method => :post, :remote => true do
          = hidden_field_tag "line_id", "${id}"
          %input{:type => "text", :name => "inventory_code", :placeholder => _("Inventory Code"), :title => _("Inventory Code"), :value => "{{if item}}${item.inventory_code}{{/if}}"}
    %li.name
      %strong ${model.name}
 
  .actions     
    %li.actions
      .multibutton
        .alternatives
          .trigger
            .arrow
          = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${contract.user.id}/hand_over/remove_lines?line_ids[]=${id}",
          :class => "button red",
          :method => "delete",
          :remote => "true",
          :"data-rel" => "tmpl/dialog/hand_over/delete_line",
          :"data-dialog_class" => "delete_line",
          :"data-on_success" => 'List.remove_line({"element": $(this).parents(".line"), "color": "red", "callback": function(){AcknowledgeOrder.update_order(response)}});' ,
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
            .icon.delete
            = _("Delete")
            
        = link_to "",
          :class => "button white open_dialog", 
          :"data-rel" => "tmpl/dialog/calendar/edit_single", 
          :"data-dialog_class" => "calendar",
          :"data-on_success" => 'AcknowledgeOrder.update_order(response);',
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
          .icon.timerange
          = _("Edit")
        
  .extended
    {{if ($error || errors)}}
    .errors
      {{if !is_available}}
      .error= _("The model is not available")
      {{/if}}
      {{each(i,error) errors}}
      .error ${error}
      {{/each}}
    {{/if}}