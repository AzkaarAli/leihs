%ul.line{:class => "${type}"}
  %div{:class => "main {{if is_overdue}}overdue{{/if}}"}
  
    {{tmpl($item.data.user) "tmpl/cell/user_name"}}
    {{tmpl($item.data) "tmpl/cell/items"}}
    
    %li.date
      ${moment(date).format(i18n.date.L)}
    
    %li{:class => "range"}
      {{if is_overdue}}
      %span.number
        %strong
          ${Math.round((new Date() - new Date(date.replace(/-/g, "/"))) / (1000 * 60 * 60 * 24)+1)}
      %span.text
        %strong
          {{if Math.round((new Date() - new Date(date.replace(/-/g, "/"))) / (1000 * 60 * 60 * 24)+1) > 1}}
          = _("Days overdue")
          {{else}}
          = _("Day overdue")
          {{/if}}
      {{else}}
      %span.text.grey
        = _("for max.")
      %span.number
        ${$max_date = new MaxDate(lines), ""}
        ${$max_days = Math.round( ($max_date - new Date()) / ((1000 * 60 * 60 * 24)+1) ), ""}
        ${$max_days}
      %span.text
      {{if $max_days > 1}}
      = _("Days")
      {{else}}
      = _("Day")
      {{/if}}
      {{/if}}
  
  .actions      
    %li.actions
      {{if is_overdue}}
      .multibutton
        .alternatives
          .trigger
            .arrow
          = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/hand_over/delete_visit?lines=${contract_line_ids}",
          :class => "button red",
          :method => 'delete',
          :remote => "true",
          :"data-rel" => "tmpl/dialog/hand_over/delete",
          :"data-dialog_class" => "hand_over",
          :"data-on_success" => 'Line.remove({"element": $(this).parents(".line"), "color": "red"})' ,
          :"data-ref_for_dialog" => "$(this).closest('.line').tmplItem().data" do
            .icon.delete
            = _("Delete")
        = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/hand_over",  :class => "button white" do
          .icon.hand_over
          = _("Hand Over")
      {{else}}
      = link_to "/backend/inventory_pools/${current_inventory_pool}/users/${user.id}/hand_over", :class => "button white" do
        .icon.hand_over
        = _("Hand Over")
      {{/if}}
    
